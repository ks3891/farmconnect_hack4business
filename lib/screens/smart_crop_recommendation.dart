import 'package:flutter/material.dart';

class SmartCropRecommendationScreen extends StatefulWidget {
  const SmartCropRecommendationScreen({super.key});

  @override
  State<SmartCropRecommendationScreen> createState() =>
      _SmartCropRecommendationScreenState();
}

class _SmartCropRecommendationScreenState
    extends State<SmartCropRecommendationScreen> {
  final TextEditingController locationController = TextEditingController();
  final TextEditingController soilController = TextEditingController();
  final TextEditingController waterController = TextEditingController();
  String recommendation = '';

  void generateRecommendation() {
    String soil = soilController.text.toLowerCase();
    String water = waterController.text.toLowerCase();

    String result = '‡§Æ‡§ï‡•à'; // Default recommendation

    if (soil.contains('‡§≤‡•ã‡§Æ') && water.contains('‡§ß‡•á‡§∞‡•à')) {
      result = '‡§ß‡§æ‡§®';
    } else if (soil.contains('‡§¨‡§æ‡§≤‡•Å') && water.contains('‡§ï‡§Æ')) {
      result = '‡§ó‡§π‡•Å‡§Å';
    } else if (soil.contains('‡§ï‡§æ‡§≤‡•ã')) {
      result = '‡§Ü‡§≤‡•Å';
    } else if (soil.contains('‡§ö‡§ø‡§ï‡§®') || soil.contains('clay')) {
      if (water.contains('‡§Æ‡§ß‡•ç‡§Ø‡§Æ') || water.contains('‡§ï‡§Æ')) {
        result = '‡§ö‡§®‡§æ';
      } else {
        result = '‡§§‡•á‡§≤‡§π‡§®';
      }
    } else if (soil.contains('‡§∞‡•á‡§§‡•Ä‡§≤‡•ã') || soil.contains('sand')) {
      if (water.contains('‡§ï‡§Æ')) {
        result = '‡§ï‡§æ‡§ó‡§§‡•Ä';
      } else {
        result = '‡§ñ‡§∞‡§¨‡•Å‡§ú‡§æ';
      }
    } else if (soil.contains('‡§™‡§æ‡§®‡•Ä‡§≤‡•ã') || soil.contains('moist')) {
      result = '‡§ï‡§æ‡§Å‡§ï‡•ç‡§∞‡•ã';
    } else if (soil.contains('‡§õ‡•ã‡§ü‡•ã') ||
        soil.contains('‡§∂‡•Å‡§∑‡•ç‡§ï') ||
        water.contains('‡§ï‡§Æ')) {
      result = '‡§Æ‡§∏‡•Å‡§∞‡•ã';
    } else if (soil.contains('‡§™‡§∞‡•ç‡§µ‡§§‡•Ä‡§Ø') ||
        locationController.text.toLowerCase().contains('‡§™‡§π‡§æ‡§°')) {
      result = '‡§ï‡•ã‡§¶‡•ã';
    } else if (locationController.text.toLowerCase().contains('‡§§‡§∞‡§æ‡§à')) {
      result = '‡§ó‡§®‡•ç‡§®‡§æ';
    }

    setState(() {
      recommendation = result;
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('‡§∏‡•ç‡§Æ‡§æ‡§∞‡•ç‡§ü ‡§¨‡§æ‡§≤‡•Ä ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∏'),
        centerTitle: true,
      ),
      body: Padding(
        padding: const EdgeInsets.all(20),
        child: Column(
          children: [
            TextField(
              controller: locationController,
              decoration: const InputDecoration(labelText: '‡§∏‡•ç‡§•‡§æ‡§®'),
            ),
            TextField(
              controller: soilController,
              decoration: const InputDecoration(labelText: '‡§Æ‡§æ‡§ü‡•ã‡§ï‡•ã ‡§™‡•ç‡§∞‡§ï‡§æ‡§∞'),
            ),
            TextField(
              controller: waterController,
              decoration: const InputDecoration(labelText: '‡§™‡§æ‡§®‡•Ä ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§§‡§æ'),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: generateRecommendation,
              child: const Text('‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∏ ‡§π‡•á‡§∞‡•ç‡§®‡•Å‡§π‡•ã‡§∏‡•ç'),
            ),
            const SizedBox(height: 20),
            if (recommendation.isNotEmpty)
              Text(
                'üìå ‡§∏‡§ø‡§´‡§æ‡§∞‡§ø‡§∏ ‡§¨‡§æ‡§≤‡•Ä: $recommendation',
                style:
                    const TextStyle(fontWeight: FontWeight.bold, fontSize: 18),
              ),
          ],
        ),
      ),
    );
  }
}
